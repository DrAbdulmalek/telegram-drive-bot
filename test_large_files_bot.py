#!/usr/bin/env python3
"""
ุณูุฑูุจุช ุงุฎุชุจุงุฑ ุงูุจูุช ูุน ุฏุนู ุงููููุงุช ุงููุจูุฑุฉ
"""

import os
import sys
import tempfile
import asyncio
from unittest.mock import Mock

def test_imports():
    """ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุฌููุน ุงูููุชุจุงุช ุงููุทููุจุฉ"""
    print("๐ ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช...")
    
    try:
        import telegram
        print("โ telegram - ุชู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ")
    except ImportError as e:
        print(f"โ telegram - ูุดู ุงูุงุณุชูุฑุงุฏ: {e}")
        return False
    
    try:
        from google.oauth2.credentials import Credentials
        from google_auth_oauthlib.flow import Flow
        from googleapiclient.discovery import build
        from googleapiclient.http import MediaFileUpload
        print("โ Google APIs - ุชู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ")
    except ImportError as e:
        print(f"โ Google APIs - ูุดู ุงูุงุณุชูุฑุงุฏ: {e}")
        return False
    
    try:
        import aiohttp
        print("โ aiohttp - ุชู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ")
    except ImportError as e:
        print(f"โ aiohttp - ูุดู ุงูุงุณุชูุฑุงุฏ: {e}")
        return False
    
    try:
        import tempfile
        import shutil
        print("โ tempfile & shutil - ุชู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ")
    except ImportError as e:
        print(f"โ tempfile & shutil - ูุดู ุงูุงุณุชูุฑุงุฏ: {e}")
        return False
    
    return True

def test_large_files_bot_class():
    """ุงุฎุชุจุงุฑ ูุฆุฉ ุงูุจูุช ูููููุงุช ุงููุจูุฑุฉ"""
    print("\n๐ค ุงุฎุชุจุงุฑ ูุฆุฉ ุงูุจูุช ูููููุงุช ุงููุจูุฑุฉ...")
    
    try:
        # ุงุณุชูุฑุงุฏ ูุฆุฉ ุงูุจูุช
        sys.path.append('/home/ubuntu')
        from telegram_drive_bot_large_files import TelegramDriveBotLargeFiles
        
        # ุฅูุดุงุก ูุซูู ูููู
        bot = TelegramDriveBotLargeFiles("test_token", "test_credentials.json")
        
        # ุงูุชุญูู ูู ุงูุฎุตุงุฆุต
        assert hasattr(bot, 'telegram_token')
        assert hasattr(bot, 'google_credentials_file')
        assert hasattr(bot, 'bot_api_server')
        assert hasattr(bot, 'MAX_FILE_SIZE_STANDARD')
        assert hasattr(bot, 'MAX_FILE_SIZE_LOCAL')
        
        # ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงูุญุฏ ุงูุฃูุตู ููููู
        standard_size = bot.get_max_file_size()
        assert standard_size == 20 * 1024 * 1024  # 20 ููุฌุงุจุงูุช
        
        # ุงุฎุชุจุงุฑ ูุน ุฎุงุฏู ูุญูู
        bot_local = TelegramDriveBotLargeFiles("test_token", "test_credentials.json", "http://localhost:8081")
        local_size = bot_local.get_max_file_size()
        assert local_size == 2 * 1024 * 1024 * 1024  # 2 ุฌูุฌุงุจุงูุช
        
        print("โ ูุฆุฉ ุงูุจูุช ูููููุงุช ุงููุจูุฑุฉ - ุชู ุฅูุดุงุคูุง ุจูุฌุงุญ")
        return True
        
    except Exception as e:
        print(f"โ ูุฆุฉ ุงูุจูุช ูููููุงุช ุงููุจูุฑุฉ - ูุดู ุงูุงุฎุชุจุงุฑ: {e}")
        return False

def test_file_size_limits():
    """ุงุฎุชุจุงุฑ ุญุฏูุฏ ุฃุญุฌุงู ุงููููุงุช"""
    print("\n๐ ุงุฎุชุจุงุฑ ุญุฏูุฏ ุฃุญุฌุงู ุงููููุงุช...")
    
    try:
        sys.path.append('/home/ubuntu')
        from telegram_drive_bot_large_files import TelegramDriveBotLargeFiles
        
        # ุงุฎุชุจุงุฑ ุงูุฎุงุฏู ุงูุนุงุฏู
        bot_standard = TelegramDriveBotLargeFiles("test", "test", "https://api.telegram.org")
        standard_limit = bot_standard.get_max_file_size()
        expected_standard = 20 * 1024 * 1024  # 20 ููุฌุงุจุงูุช
        
        if standard_limit == expected_standard:
            print(f"โ ุงูุฎุงุฏู ุงูุนุงุฏู - ุงูุญุฏ ุงูุฃูุตู: {standard_limit / (1024*1024):.0f} ููุฌุงุจุงูุช")
        else:
            print(f"โ ุงูุฎุงุฏู ุงูุนุงุฏู - ุฎุทุฃ ูู ุงูุญุฏ ุงูุฃูุตู")
            return False
        
        # ุงุฎุชุจุงุฑ ุงูุฎุงุฏู ุงููุญูู
        bot_local = TelegramDriveBotLargeFiles("test", "test", "http://localhost:8081")
        local_limit = bot_local.get_max_file_size()
        expected_local = 2 * 1024 * 1024 * 1024  # 2 ุฌูุฌุงุจุงูุช
        
        if local_limit == expected_local:
            print(f"โ ุงูุฎุงุฏู ุงููุญูู - ุงูุญุฏ ุงูุฃูุตู: {local_limit / (1024*1024*1024):.0f} ุฌูุฌุงุจุงูุช")
        else:
            print(f"โ ุงูุฎุงุฏู ุงููุญูู - ุฎุทุฃ ูู ุงูุญุฏ ุงูุฃูุตู")
            return False
        
        return True
        
    except Exception as e:
        print(f"โ ุงุฎุชุจุงุฑ ุญุฏูุฏ ุงููููุงุช - ุฎุทุฃ: {e}")
        return False

def test_temp_file_handling():
    """ุงุฎุชุจุงุฑ ุงูุชุนุงูู ูุน ุงููููุงุช ุงููุคูุชุฉ"""
    print("\n๐ ุงุฎุชุจุงุฑ ุงูุชุนุงูู ูุน ุงููููุงุช ุงููุคูุชุฉ...")
    
    try:
        # ุฅูุดุงุก ููู ูุคูุช ููุงุฎุชุจุงุฑ
        with tempfile.NamedTemporaryFile(delete=False) as temp_file:
            test_data = b"This is a test for temp file" * 1000  # ุจูุงูุงุช ุงุฎุชุจุงุฑ
            temp_file.write(test_data)
            temp_file_path = temp_file.name
        
        # ุงูุชุญูู ูู ูุฌูุฏ ุงูููู
        if os.path.exists(temp_file_path):
            print(f"โ ุชู ุฅูุดุงุก ููู ูุคูุช: {temp_file_path}")
            
            # ุงูุชุญูู ูู ุญุฌู ุงูููู
            file_size = os.path.getsize(temp_file_path)
            print(f"โ ุญุฌู ุงูููู ุงููุคูุช: {file_size} ุจุงูุช")
            
            # ุญุฐู ุงูููู ุงููุคูุช
            os.unlink(temp_file_path)
            
            if not os.path.exists(temp_file_path):
                print("โ ุชู ุญุฐู ุงูููู ุงููุคูุช ุจูุฌุงุญ")
            else:
                print("โ ูุดู ูู ุญุฐู ุงูููู ุงููุคูุช")
                return False
        else:
            print("โ ูุดู ูู ุฅูุดุงุก ุงูููู ุงููุคูุช")
            return False
        
        return True
        
    except Exception as e:
        print(f"โ ุงุฎุชุจุงุฑ ุงููููุงุช ุงููุคูุชุฉ - ุฎุทุฃ: {e}")
        return False

def test_environment_setup():
    """ุงุฎุชุจุงุฑ ุฅุนุฏุงุฏ ุงูุจูุฆุฉ ูููููุงุช ุงููุจูุฑุฉ"""
    print("\n๐ง ุงุฎุชุจุงุฑ ุฅุนุฏุงุฏ ุงูุจูุฆุฉ ูููููุงุช ุงููุจูุฑุฉ...")
    
    # ุงูุชุญูู ูู ูุฌูุฏ ุงููููุงุช ุงููุทููุจุฉ
    required_files = [
        'telegram_drive_bot_large_files.py',
        'setup_local_bot_api.md',
        'requirements.txt'
    ]
    
    missing_files = []
    for file in required_files:
        if os.path.exists(file):
            print(f"โ {file} - ููุฌูุฏ")
        else:
            print(f"โ {file} - ููููุฏ")
            missing_files.append(file)
    
    return len(missing_files) == 0

def test_docker_availability():
    """ุงุฎุชุจุงุฑ ุชููุฑ Docker"""
    print("\n๐ณ ุงุฎุชุจุงุฑ ุชููุฑ Docker...")
    
    try:
        import subprocess
        result = subprocess.run(['docker', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"โ Docker ูุชููุฑ: {result.stdout.strip()}")
            return True
        else:
            print("โ Docker ุบูุฑ ูุชููุฑ")
            return False
    except FileNotFoundError:
        print("โ Docker ุบูุฑ ูุซุจุช")
        return False
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุญุต Docker: {e}")
        return False

def create_test_file(size_mb: int) -> str:
    """ุฅูุดุงุก ููู ุงุฎุชุจุงุฑ ุจุญุฌู ูุญุฏุฏ"""
    try:
        temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.test')
        
        # ูุชุงุจุฉ ุจูุงูุงุช ุจุงูุญุฌู ุงููุทููุจ
        chunk_size = 1024 * 1024  # 1 ููุฌุงุจุงูุช
        data_chunk = b'A' * chunk_size
        
        for _ in range(size_mb):
            temp_file.write(data_chunk)
        
        temp_file.close()
        return temp_file.name
        
    except Exception as e:
        print(f"โ ูุดู ูู ุฅูุดุงุก ููู ุงูุงุฎุชุจุงุฑ: {e}")
        return None

def test_large_file_simulation():
    """ูุญุงูุงุฉ ุงูุชุนุงูู ูุน ููู ูุจูุฑ"""
    print("\n๐ฆ ูุญุงูุงุฉ ุงูุชุนุงูู ูุน ููู ูุจูุฑ...")
    
    try:
        # ุฅูุดุงุก ููู ุงุฎุชุจุงุฑ 50 ููุฌุงุจุงูุช
        print("๐ ุฅูุดุงุก ููู ุงุฎุชุจุงุฑ 50 ููุฌุงุจุงูุช...")
        test_file_path = create_test_file(50)
        
        if not test_file_path:
            return False
        
        # ุงูุชุญูู ูู ุญุฌู ุงูููู
        file_size = os.path.getsize(test_file_path)
        expected_size = 50 * 1024 * 1024
        
        if abs(file_size - expected_size) < 1024:  # ุชุณุงูุญ 1 ููููุจุงูุช
            print(f"โ ุชู ุฅูุดุงุก ููู ุจุญุฌู {file_size / (1024*1024):.1f} ููุฌุงุจุงูุช")
        else:
            print(f"โ ุญุฌู ุงูููู ุบูุฑ ุตุญูุญ: {file_size} ุจุฏูุงู ูู {expected_size}")
            return False
        
        # ูุญุงูุงุฉ ูุนุงูุฌุฉ ุงูููู
        print("โ๏ธ ูุญุงูุงุฉ ูุนุงูุฌุฉ ุงูููู...")
        
        # ูุฑุงุกุฉ ุงูููู ุจุฃุฌุฒุงุก (ูุญุงูุงุฉ ุงูุชูุฒูู)
        chunk_size = 8192
        total_read = 0
        
        with open(test_file_path, 'rb') as f:
            while True:
                chunk = f.read(chunk_size)
                if not chunk:
                    break
                total_read += len(chunk)
        
        if total_read == file_size:
            print(f"โ ุชู ูุฑุงุกุฉ ุงูููู ุจุงููุงูู: {total_read} ุจุงูุช")
        else:
            print(f"โ ุฎุทุฃ ูู ูุฑุงุกุฉ ุงูููู: {total_read} ูู {file_size}")
            return False
        
        # ุญุฐู ููู ุงูุงุฎุชุจุงุฑ
        os.unlink(test_file_path)
        print("โ ุชู ุญุฐู ููู ุงูุงุฎุชุจุงุฑ")
        
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุญุงูุงุฉ ุงูููู ุงููุจูุฑ: {e}")
        return False

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุงุฎุชุจุงุฑ"""
    print("๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุงูุจูุช ูุน ุฏุนู ุงููููุงุช ุงููุจูุฑุฉ")
    print("=" * 60)
    
    tests = [
        ("ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช", test_imports),
        ("ูุฆุฉ ุงูุจูุช ูููููุงุช ุงููุจูุฑุฉ", test_large_files_bot_class),
        ("ุญุฏูุฏ ุฃุญุฌุงู ุงููููุงุช", test_file_size_limits),
        ("ุงูุชุนุงูู ูุน ุงููููุงุช ุงููุคูุชุฉ", test_temp_file_handling),
        ("ุฅุนุฏุงุฏ ุงูุจูุฆุฉ", test_environment_setup),
        ("ุชููุฑ Docker", test_docker_availability),
        ("ูุญุงูุงุฉ ููู ูุจูุฑ", test_large_file_simulation)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        try:
            if test_func():
                passed += 1
        except Exception as e:
            print(f"โ {test_name} - ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")
    
    print("\n" + "=" * 60)
    print(f"๐ ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑ: {passed}/{total} ูุฌุญ")
    
    if passed == total:
        print("๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช!")
        print("\n๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ ูุฏุนู ุงููููุงุช ุงููุจูุฑุฉ:")
        print("1. ุซุจุช Docker ุนูู ูุธุงูู")
        print("2. ุงุญุตู ุนูู API ID ู API Hash ูู my.telegram.org")
        print("3. ุดุบู ุฎุงุฏู Bot API ุงููุญูู ุจุงุณุชุฎุฏุงู Docker")
        print("4. ุฃุถู BOT_API_SERVER=http://localhost:8081 ุฅูู ููู .env")
        print("5. ุดุบู ุงูุจูุช ุจุงุณุชุฎุฏุงู: python3 telegram_drive_bot_large_files.py")
        print("\n๐ ุฑุงุฌุน ููู setup_local_bot_api.md ููุชูุงุตูู ุงููุงููุฉ")
    else:
        print("โ ุจุนุถ ุงูุงุฎุชุจุงุฑุงุช ูุดูุช. ูุฑุฌู ูุฑุงุฌุนุฉ ุงูุฃุฎุทุงุก ุฃุนูุงู.")
        
        if passed >= total - 2:  # ุฅุฐุง ูุฌุญ ูุนุธู ุงูุงุฎุชุจุงุฑุงุช
            print("\n๐ก ูุนุธู ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช. ููููู ุงููุชุงุจุนุฉ ูุน ูุฑุงุนุงุฉ ุงูุฃุฎุทุงุก ุงูุจุณูุทุฉ.")

if __name__ == '__main__':
    main()

